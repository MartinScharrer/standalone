% \iffalse meta-comment
%<=*COPYRIGHT>
%% Copyright (C) 2011 by Martin Scharrer <martin@scharrer-online.de>
%% ---------------------------------------------------------------------------
%% This work may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either version 1.3
%% of this license or (at your option) any later version.
%% The latest version of this license is in
%%   http://www.latex-project.org/lppl.txt
%% and version 1.3 or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%%
%% This work has the LPPL maintenance status `maintained'.
%%
%% The Current Maintainer of this work is Martin Scharrer.
%%
%% This work consists of the files <+name+>.dtx and <+name+>.ins
%% and the derived filebase <+name+>.sty.
%%
%<=/COPYRIGHT>
% \fi
%
% \iffalse
%<*driver>
\NeedsTeXFormat{LaTeX2e}
\ProvidesFile{standalone.dtx}[%
%<=*DATE>
    2011/11/01
%<=/DATE>
%<=*VERSION>
    v0.5
%<=/VERSION>
    DTX file of the standalone bundle]
\documentclass[a4paper,11pt]{ydoc}
%\addtolength{\oddsidemargin}{1cm}
%\addtolength{\textwidth}{-1cm}

\EnableCrossrefs
\CodelineIndex
\RecordChanges
\colorlet{keydesc}{opt}
%\OnlyDescription
\begin{document}
  \DocInput{\jobname.dtx}
  \PrintChanges
  \newpage\PrintIndex
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \changes{v0.1}{2010/03/21}{First released version}
% \changes{v0.2}{2010/03/22}{Added support for beamer style settings in the config file using \cs{ifstandalonebeamer}. Updated documentation.}
% \changes{v0.3}{2010/03/26}{Added package options to automatically copy sub-preamble code to the main preamble.}
% \changes{v0.3a}{2010/03/27}{Fixed bug related to line endings in \texttt{.sta} file. Listed sub-files now have \texttt{.tex} as default extension.}
% \changes{v0.4}{2011/02/28}{Added option 'border' for easy adjustments of the preview border.}
%
% \GetFileInfo{\jobname.dtx}
%
% \DoNotIndex{\newcommand,\newenvironment,\def,\edef,\xdef,\gdef,\DeclareRobustCommand}
% \DoNotIndex{\expandafter,\if,\else,\fi,\ifnum,\ifx,\let,\global,\long}
% \DoNotIndex{\newcounter,\newcount,\message,\meaning,\noexpand,\relax,\value}
% \DoNotIndex{\setcounter,\addtocounter,\advance,\afterassignment,\AtEndOfPackage}
% \DoNotIndex{\ProvidesPackage,\providecommand,\RequirePackage,\empty,\begin,\end}
% \DoNotIndex{\begingroup,\bgroup,\egroup,\endgroup,\csname,\endcsname,\@tempa,\@tempb}
% \DoNotIndex{\ignorespaces,\lccode,\sffamily,\@gobble,\@ifundefined,\@for,\or}
% \DoNotIndex{\@firstoftwo,\@ifnextchar,\@namedef,\@nameuse,\@secondoftwo}
% \DoNotIndex{\@temptokena,\toks@,\BODY,\do,\g@addto@macro,\lowercase,\uppercase,\the}
% \DoNotIndex{\aftergroup,\CurrentOption,\DeclareBoolOption,\DeclareDefaultOption,\DeclareStringOption,\DeclareVoidOption}
% \DoNotIndex{\endinput,\endpreview,\input,\LoadClass,\newif,\PassOptionsToPackage,\preview,\ProcessKeyvalOptions}
% \DoNotIndex{\renewcommand,\renewenvironment,\setbeamertemplate,\SetupKeyvalOptions,\space,\unskip,\usepackage}
% \DoNotIndex{\unexpanded,\write,\next,\jobname,\hbox}
%
% \ifpdf
% \hypersetup{%
%   pdfauthor   = {Martin Scharrer <martin@scharrer-online.de>},
%   pdftitle    = {The standalone class and package},
%   pdfsubject  = {Documentation of LaTeX class and package 'standalone'},
%   pdfkeywords = {standalone, LaTeX, TeX}
% }%
% \fi
% \clearpage
% \null
% \vspace*{-2em}
% \begin{center}
%   {\LARGE\textsf{The \textbf{standalone} Class and Package\\[\bigskipamount]}}
%   {\large Martin Scharrer \\[\smallskipamount]\normalsize
%   \url{martin@scharrer-online.de}\\[\medskipamount]
%   \url{http://www.ctan.org/pkg/standalone/}\\[\bigskipamount]}
%   {\large Version \fileversion\ -- \filedate}\\
% \end{center}
% \vspace{1.2em}%
%
% \begin{abstract}
% The \pkg{standalone} bundle allows users to easily place picture environments or other material in own source files
% and compile these on their own or as part of a main document.
% A special \cls{standalone} class is provided for use with such files, which by default crops the resulting output file to the content.
% The \pkg{standalone} package enables the user to simply load the standalone files using \Macro\input\relax inside a main document.
% \end{abstract}
%
% \begin{multicols}{2}
% \setcounter{tocdepth}{2}
% \tableofcontents
% \end{multicols}
%
% \section{Introduction}
% Larger \LaTeX{} documents can be split into multiple \TeX\ files which are then included in a main document with \cs{include}
% for e.g.\ chapter files or \cs{input} for e.g.\ \TeX-coded pictures. Keeping pictures in their own sub-files improves readability
% of the main file and simplifies the sharing of them between different documents. However, during the, sometimes lengthly,
% drawing/coding process it has benefits to be able to compile the pictures on their own. The compile process is much quicker and
% the resulting document only holds the picture which avoids constant page turning and zooming.
%
% While it is possible to write a small `main' file for each picture file, this method is a little cumbersome and clutters
% the directories with a lot of extra files. A second method is to place the `main' components, i.e. a preamble, directly into the
% picture files and make the main document ignore this code sections.
%
% The package \cls{standalone} can be used in the main document to skip all extra preambles in included files. The main file must load all packages
% and settings required by the sub-files. Several package options are provided to collect the preambles of the sub-files automatically and execute them from the main file.
%
% A \cls{standalone} class is also provided to minimise the extra preamble code needed in this files.
% It's usage is optional, but simplifies and standardises how picture files are compiled standalone.
% The class uses by default the \pkg{preview} package to create an output file which only contains the picture with no extra
% margins, page numbers or anything else. A configuration file \file{standalone.cfg} read by the class allows the user to adjust settings and macros easily
% on a per directory base.
%
% \subsection{Similar Packages}
% The \pkg{docmute} package by T.M.\ Trzeciak is written for the same basic task as the \cls{standalone} package. However, no sub-preamble processing other than the removal is support. It also
% doesn't provide a special class or configuration file.
%
% The \lib{external} library of \pkg{tikz} allows to externalize \env{tikzpictures} from an main document. Its build feature is similar to the one provided by \cls{standalone}.
% However, both work form different directions: \cls{standalone} allows to include external \env{tikzpictures} to be included in a main file while ignoring the preamble while
% \lib{external} writes them from the main file to temporary external files. The user must decide which workflow is better suited for him/her.
% Also \cls{standalone} is working independently of \pkg{tikz} and supports other picture environments like \pkg{pstricks} or any other \TeX\ material.
%
% \subsection{Dependencies}
% The \cls{standalone} class and package require the \pkg{xkeyval} package.
% The packages \pkg{ifpdf}, \pkg{ifluatex} and \pkg{ifxetex} are loaded if available, otherwise some fall-back code is used.
% If enabled the class options \opt{varwidth}, \opt{preview} and \opt{beamer} require the package or class of the same name.
%
% The \pkg{standalone} package requires the \pkg{currfile} package (which in turn uses \pkg{filehook}) to track the correct file names of
% sub-files included using |\input|.
% For the compilation support for included standalone files the \pkg{gincltex} and \pkg{filemod} packages are also required.
%
% To compile the documentation of \cls{standalone} the \cls{ydoc} bundle is required.
%
% All of these packages are included in recent versions of the TeXLive or MikTeX distributions and are freely available on CTAN (\url{http://www.ctan.org/}).
%
% \clearpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \section{Usage of the \cls{standalone} class}
% \subsection{Basic usage}
% Creating a basic standalone is straight-forward: Create a normal \LaTeX\ document which uses the \cls{standalone} as document class.
% The preamble should load all required packages and libraries for the content. The content, usually a single picture environment like \env{tikzpicture},
% is placed in the \env{document} body. Empty lines before and after the picture should be avoided.
%
% \par\noindent
% \begin{minipage}{\textwidth}\small
% \begin{lstlisting}[language={[latex]tex},gobble=4,frame=lines,caption={Basic use of the \cls{standalone} class.},numbers=none]
%   \documentclass{standalone}
%   \usepackage{tikz}
%   \begin{document}
%   \begin{tikzpicture}
%     \draw (0,0) rectangle (2,1) node [midway] {Example};
%   \end{tikzpicture}
%   \end{document}
% \end{lstlisting}
% \end{minipage}
%
% Such a file can be compiled as normal. The \cls{standalone} class will crop the resulting output file (PDF or DVI/PS) to the content size plus a certain border.
% Page number and other header or footer material will be suppressed.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{Class options}
% The \cls{standalone} class provides the following options to adjust the processing and size of the content.
% These options are removed from the normal list of class options and not passed to any loaded packages or classes like it would usually occur.
% This is also done to avoid option conflicts with identical named options of the underlying class.
%
% All boolean options take either `|true|' or `|false|' as optional values. Otherwise, if the option is used without a value, `|true|' is used.
% If not mentioned otherwise all options set the `|false|' by default.
% Options might switch other options on or off. For example, mutual exclusive options will disable each other. The order of the option is obeyed
% and later options will prevail over earlier ones.
%
% Certain class options can also be changed inside the preamble or document body using \Macro\standaloneconfig{<options>}.
%
% \DescribeKey{class}'='<class name>
% Specifies the underlying class which is loaded by the \cls{standalone} class.
% By default \cls{article} is used, which should be suitable for standalone pictures.
% In certain cases it may be from benefit to use the same class than in the targeted main document.
% For the \cls{beamer} class the special \opt{beamer} option should be used instead.
%
% \DescribeKey{crop}'=true|false'
% If enabled this option crops the content to its natural size plus a specified border. This is done by saving the content in a box register and resizing
% the page size relative to the box dimensions.
% This option is mutual exclusive with the similar \opt{preview} option and will therefore disable it.
%
% \DescribeKey{preview}'=true|false'
% If enabled this option loads the \pkg{preview} package with the \opt{tightpage} option
% and wraps the content into a \env{preview} environment. This crops the content to its natural size plus a specified border.
% Issues with the \pkg{preview} options and TikZ shadings under XeLaTeX have been reported. In this cases the \opt{crop} option should be used instead.
%
% This option is mutual exclusive with the similar \opt{crop} option and will therefore disable it.
%
% \DescribeKey{multi}'=true|false'
% By default the \cls{standalone} class assume that the whole content is one block which should be shown on one single page.
% If this option is activated multiple pages are supported. Each page will be cropped to its content plus the selected border (as long either \opt{preview} or \opt{crop} are enabled).
% A set of environments which hold a single page must be declared using \Macro\standaloneenv{<environment name>, \ldots}.
% No typeset material should appear outside such environments.
%
% \DescribeKey{border}'='<length (all sides)>
% \DescribeKey{border}'='{<length (left/right)>~<length (bottom/top)>}
% \DescribeKey{border}'='{<length (left)>~<length (right)>~<length (bottom)>~<length (top)>}
% This option allows to specify the border used by the \opt{preview} and \opt{crop} options.
% The border can either be given using a single value for all sides, separately for the horizontal and vertical borders or for all sides separately.
% Multiple values are separated by spaces, which require the whole value to be wrapped in braces.
%
% This option can be changed during the document using \Macro\standaloneconfig and will affect all following pages.
%
% \DescribeKey{ignorerest}'=true|false'
% This option is only meaningful when both \opt{multi} and \opt{crop} are enabled.
% Then it determines if all material which does not appear inside environments declared with \Macro\standalone should be ignored or not.
% This is done by boxing and discarding all outside material. Any code will be placed inside a group and therefore local settings made between environments
% will not affect later code. Code in the preamble is not affected.
% It is recommended to keep this option disabled and only use it if really required.
% It should be noted that which \opt{preview} such material is always ignored while not affecting local settings.
% Therefore the \opt{ignorrest} option can be seen as a compatibility setting to make \opt{crop} act more like \opt{preview}, if this is required by the user.
%
% \DescribeKey{varwidth}'=true|false'
% \DescribeKey{varwidth}'='<width>
% A trailing empty line between the content and \Macro\end{document}\relax will normally create a paragraph which is \Macro\linewidth wide.
% This paragraph (or any other one) will enlarge the size of smaller pictures and display itself as a large right border.
% This option uses the \pkg{varwidth} package to wrap the content into a \env{varwidth} environment, which is based on \env{minipage},
% but will always use the natural width of the content if it is smaller than the given maximum width.
% The resulting effect is that the created paragraph will not cause any additional width and that multiple paragraphs can be included as part of the content.
% The used maximal width (which is provided to the underlying \env{minipage} environment) is \Macro\linewidth by default, but can be set 
% by provided a width as value to the option. Doing so will also switch the option on.
%
% A drawback of this option is that the content will be limited to the given width, i.e.\ wider picture environment will be cropped to the width at the right
% side. In such cases either a larger width should be selected, the option be switch off, any paragraph breaks should be avoided (no trailing empty lines) or one of the 
% specific picture options like \opt{tikz} should be used instead.
%
% This option can be changed during the document using \Macro\standaloneconfig and will affect all content of the following pages.
%
% \DescribeKey{tikz}'=true|false'
% This option declares that the content contains of one or more \env{tikzpicture}s. This sets |multi=true,varwidth=false|, loads the \pkg{tikz} package and
% declares \Macro\standaloneenv{tikzpicture}.
%
% \DescribeKey{beamer}'=true|false'
% If set to `|true|' this option enables a special \cls{beamer} mode, where the normal cropping is disabled.
% Instead the content is shown on a blank beamer frame.
%
% \DescribeKey{convert}'='{<conversion options>}
% \DescribeKey{png}'='{<conversion options>}
% These options allow to enable and configure the conversion feature. See \autoref{sec:convert} for the full description.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{Class configuration file}
% The \cls{standalone} class loads a configuration file called \file{standalone.cfg} just before the options are processed, but after all options and if-switches are declared.
% Any class options can then also be given using \Macro\standaloneconfig{<options>}.
% Settings which depends on the finally used options should be placed inside \Macro\AtEndOfClass{\ldots}, so that they are processed after all options.
% This is particular required for \cls{beamer} specific settings, because at load time of the configuration file a given \opt{beamer} option is not yet processed.
%
% A default configuration file is provided together with the bundle and holds some default settings. Because this file will be overwritten every time the bundle is updated, users
% should create an own configuration file in the local TEXMF tree or the document directory. In order to keep the default behaviour this file should either contain the content of the bundle configuration file
% or load it.
% Because it can be assumed that the bundle configuration file resides inside a \file{standalone} directory, therefore it can be loaded from a user configuration file using
% \Macro\input{standalone/standalone.cfg}.
%
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{Macros and environments}
% The following macros and environments can be used inside \cls{standalone} files.
%
% \DescribeMacro{\standaloneignore}
% In rare cases some code must be placed before the |\documentclass| of a sub-file (e.g.\ |\PassOptionsToPackage|).
% Because the main document will only skip code between |\documentclass| and |\begin{document}| this code will be executed by it.
% In order to avoid this the macro \cs{standaloneignore} can be used at the very beginning of a sub-file to skip over this code.
% However it must be written as |\csname standaloneignore\endcsname| to avoid a `Undefined control sequence' error when compiled standalone.
% After all the class is not loaded at this point, therefore no \cls{standalone} macros are yet defined.
% The |\csname|\,\ldots|\endcsname| construct will simple make it equal to |\relax| in this case.
%
% Please note that all code before |\documentclass| is not processed by any of the \opt{subpreamble} options but always simply removed.
% This macro was inspired by the similar macro |\docmute| of the |docmute| package.
%
% \DescribeEnv[<sub-file content>]{standalone}
% The \env{standalone} environment is automatically wrapped around the content of standalone files.
% If the \opt{multi} option is enabled it is wrapped around every page, i.e.\ every environment declared with \Macro\standaloneenv.
% The definition of this environment depends on options like \opt{crop} and \opt{preview}.
% It is possible to redefine this environment in the configuration file or the document preamble to adjust the processing of the content, but this is not recommended.
% If done most content related options will stop work and/or cause errors.
%
% The beamer specific macros and environments are described in section~\ref{sec:beamer}.
%
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{Support for Beamer Presentations}\label{sec:beamer}
% Presentation can be written in \LaTeX\ using the \cls{beamer} class. Each presentation frame is wrapped in a \env{frame} environment. Overlay effects
% can be added using special macros. This effects result in multiple pages per frame. Pictures with such overlay effects can not be
% compiled standalone using the normal settings. Instead the \cls{standalone} class must load the |beamer| class and wrap the content also in
% a \env{frame} environment while skipping the \env{preview} environment. To activate this settings load the \cls{standalone} class with the |beamer| option.
% Because the \env{frame} environment is quite special (it normally collects all it's content and calls the \cs{frame}) and must also support
% verbatim content it is not easily possible to redefined the |document| environment to include \env{frame}. Also \env{frame} accepts options which |document| doesn't.
% Therefore a second environment called \env{standaloneframe} is used in the beamer picture files. It will be equal to \env{frame} in standalone mode, but
% without effect otherwise.
%
% \DescribeMacro{\ifstandalonebeamer}
% Both the class and the package provide the if-switch \cs{ifstandalonebeamer}, which can be used to only include code if the file is
% compiled standalone with the |beamer| class option set.
% The switch is set to \cs{iftrue} by the class when loaded with the \opt{beamer} option and always to \cs{iffalse} by the package.
% It can be used to place beamer specific options in the configuration files, which should be skipped for non-beamer standalone files.
% If used inside the configuration file this switch must be placed inside \Macro\AtEndOfClass{\ldots}, because the \opt{beamer} option is not yet processed 
%
% \begin{DescribeEnv}{standaloneframe}
%   !\begingroup\oargstyle!<< <overlay specification> >>!\endgroup!
%   ['<'<default overlay spec>'>']!\\\hspace*{7em}!
%   [<options>]{<optional frame title>}{<optional frame subtitle>}
%   \relax\MacroArgs<code with beamer overlays>
% \end{DescribeEnv}
% The \env{standaloneframe} environment must be used in sub-file holding beamer overlay code.
% It is only defined when the class is called with the |beamer| option and acts as a replacement
% of the \env{frame} environment of beamer when compiled standalone.
% All optional arguments of \env{frame} are supported but most might not be useful for normal sub-files.
% When compiled as part of a main document it does nothing except of gobbling its arguments.
%
%
% \par\bigskip\noindent
% \begin{minipage}{\textwidth}\noindent\small
% \begin{lstlisting}[language={[latex]tex},gobble=4,frame=lines,numbers=none,caption={Use of \texttt{standalone} class with \texttt{beamer} option.}]
%   % Use of 'standalone' class with a beamer overlay:
%   \documentclass[beamer]{standalone}
%   % Load packages needed for this TeX file:
%   \usepackage{tikz}
%
%   % Surround TeX code with 'document' environment as usually:
%   \begin{document}
%   \begin{standaloneframe}[options] % e.g. 'fragile'
%    % Add your TeX code:
%     \only<1>{ One }%
%     \only<2>{ Two }%
%   \end{standaloneframe}
%   \end{document}
% \end{lstlisting}
% \end{minipage}
%
% \par\bigskip\noindent
% \begin{minipage}{\textwidth}\noindent\small
% \begin{lstlisting}[language={[latex]tex},gobble=4,frame=lines,numbers=none,caption={Effective beamer code if compiled standalone.}]
%   \documentclass{beamer}
%   <beamer code from standalone.cfg file>
%
%   \usepackage{tikz}
%
%   \begin{document}
%   \begin{frame}[your options]
%     \only<1>{ One }%
%     \only<2>{ Two }%
%   \end{frame}
%   \end{document}
% \end{lstlisting}
% \end{minipage}
%
% \par\bigskip\noindent
% \begin{minipage}{\textwidth}\noindent\small
% \begin{lstlisting}[language={[latex]tex},gobble=4,frame=lines,numbers=none,caption={Effective code if included in a beamer presentation.}]
%   \begingroup
%     \only<1>{ One }%
%     \only<2>{ Two }%
%   \endgroup
%   \endinput
% \end{lstlisting}
% \end{minipage}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{FAQ / Troubleshooting}
% This section expands some issues and their solution which can arise with the \cls{standalone} class.
%
% \subsubsection*{Large white space / border at the right side}
% A large white space / border on the right side occurs when the content is placed inside a paragraph.
% This causes the content to be \Macro\linewidth wide and so smaller pictures will contain now a white space at the right.
% A common cause for this is that there was is a empty line between the content and \Macro\end{document} which causes a paragraph break.
%
% This issue can be solved by either removing any trailing lines or other paragraph breaks, or by using the \opt{varwidth} option which suppresses the extra added width.
% It is also possible to use the \opt{multi} option and \Macro\standaloneenv{<environment name>} to declare certain environments as page content.
% The \opt{tikz} option does this for \env{tikzpictures}. See the descriptions of these options for more details.
%
% \subsubsection*{Some amount of the content on the right side is missing}
% If the content is cropped to much on the right side, check if the \opt{varwidth} option is used. In this case the used maximum width (\Macro\linewidth by default) is too small.
% A larger width can be set using \hbox{\opt{varwidth}\MacroArgs'='<length>} or the option can be disabled altogether using \hbox{\opt{varwidth}|=false|}.
% The largest width possible is given by \Macro\maxdimen, which however might cause internal overflows.
%
% This can also be caused with \cls{beamer} content (i.e.\ when the \opt{beamer} option is used). In this case no cropping or \env{varwidth} environment is used at all,
% but the content is simply to large to fit on a \cls{beamer} \env{frame}. To avoid this rescale the content to do fit. This can be realised by either using 
% scaling facilities of the used picture environment (like |scale| with \env{environment}, but this only scales coordinates) or using \Macro\scalebox or \Macro\resizebox from \pkg{graphicx}.
% For complicated code which contains verbatim or other catcode changing code either the \Macro\Resizebox from the \pkg{realboxes} or \Macro\begin{adjustbox}{scale=<factor>}'..'\AlsoMacro\end{adjustbox} from the 
% \pkg{adjustbox} package should be used.
%
% \subsubsection*{A multi-page document contains some pages with unwanted content}
% This is caused while \opt{multi}|=true| and \opt{crop}|=true| are set but \opt{ignorerest}|=false| \emph{and} the document contains
% typeset material outside of environments declared with \Macro\standaloneenv. To avoid that this extra material should be removed or \opt{ignorerest} should be set to |true|.
% This will also ignore all settings inside the document body which are not inside a declared environment. These can be moved to the preamble instead.
% See the description of the \opt{ignorerest} option for more details.
%
% \subsubsection*{In a multi-page document using DVI/PS mode all pages except the first have a vertical offset}
% The vertical reference points in PostScript could does not change when the pages are resized to fit the individual content of every page.
% Therefore an offset is added to compensate for this, which shifts the content to the appropriate vertical position.
% Should this not work as expected please inform the package author and provide a small example which causes this issue, together with the version number of the used |latex| compiler and tools (like |dvips|, |ps2pdf|)
% as well as the used \cls{standalone} bundle.
%
% \subsubsection*{Image conversion does not work}
% In order for the image conversion to work an external conversion software must be installed. By default either Image Magkick or GhostScript is used. Please insure that either or both of these softwares are installed.
% Installation guide for your operating system should be easily available on the Internet. The \LaTeX\ compiler option |-shell-escape| must be used to allow this external software to be executed from within the \LaTeX\ code.
% If this two points are fulfilled but the conversion does still not work, please check the log file. The lines in question start with |runsystem| (at least with \TeX\ Live 2011).
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \section{Usage of the \cls{standalone} package}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \section{Common macros}
% The following conditional macros are defined by both the \cls{standalone} class and package, but react differently when the code is compiled standalone or as part of a main document.
%
% \DescribeMacro{\ifstandalone}
% Both the class and the package provide the if-switch \cs{ifstandalone}, which can be used to only include code if the file is
% compiled standalone. The switch is set to \cs{iftrue} by the class and to \cs{iffalse} by the package.
%
% The additional file \file{standalone.tex} also defines this switch by checking if \cs{documentclass} was already used. It can be included
% with |\input{standalone}| and is intended for specialised files which do not use the \cls{standalone} class.
%
% \DescribeMacro{\IfStandalone}{<code for standalone mode>}{<code for main document>}
% This is the macro version of the \Macro\ifstandalone| if-switch. It executes the first argument only in \cls{standalone} mode, i.e.\ when the file is compiled on its own.
% When included in the main document the second argument is executed instead.
% As mentioned in section~\ref{sec:pkgoptions}
% it can also be used to hide |\usepackage| and similar macros from the extraction scanner of the |sort| option. The macro and its arguments is not printed into the |.stp| file.
%
% \DescribeMacro{\onlyifstandalone}{<code>}
% This macro is similar to \Macro\IfStandalone but only has takes one argument which is executed only in standalone mode, but ignored when compiled as part of a main document.
% As mentioned in section~\ref{sec:pkgoptions}
% it can also be used to hide |\usepackage| and similar macros from the extraction scanner of the |sort| option. The macro and its argument is not printed into the |.stp| file.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \subsection{Quick instructions}
% Load the \cls{standalone} \emph{package} very early in the main document. Also all packages needed by all the sub-files must be loaded by the main document.
% Include your picture or other sub-files using |\input| or a similar macro as normal.
% In the sub-files use the \cls{standalone} \emph{class} with a normal \cs{documentclass} and load all packages needed for the particular
% file. Finally wrap the actual content of the sub-file in a |document| environment.
%
% When the sub-file is compiled on its own the |\documentclass| and |document| environment will be active as normal. The main file, however,
% will skip everything from the |\documentclass| till the |\begin{document}|. The (now fake) |document| environment is redefined to be a simple
% TeX-group. Any code after the |\end{document}| will be ignored. The real |document| environment of the main file will be unaffected and will work as normal.
%
% The packages required by each sub-file can be transfered automatically to the main document preamble using the options
% listed in section~\ref{sec:pkgoptions}.
%
% \subsection{Package Options}\label{sec:pkgoptions}
% The \cls{standalone} package removes all sub-file preambles (``sub-preambles'') by default when loaded.
% However, if the package is loaded with the \opt*{subpreambles} options, all sub-preambles are stored in an auxiliary file with the name `\meta{main tex file name}|.sta|' (for \emph{sta}ndalone).
% This file is then loaded or processed at the beginning of the next \LaTeX\ run (i.e.\ at the place in the preamble where the \cls{standalone} package is loaded).
% The way how the \opt{subpreambles} option works can be controlled by the options \opt{sort}, \opt{print} and \opt{comments}/\opt{nocomments}.
% Please note that the \opt{sort} and \opt{print} options require of course the \opt{subpreambles} option and will enable it if not already done so.
%
% With only the \opt{subpreambles} option set, the sub-preambles are simple read and executed unchanged. This includes the risk of option clashes if one package is loaded with different
% options inside the sub-preambles and/or the main preamble. This is avoided by the \opt*{sort} option, which accumulates all packages loaded by all sub-files together with their options.
% The options are then marked to be loaded by the package using \LaTeX{}s \cs{PassOptionsToPackage} macro. The packages are loaded at the end of the preamble using the \cs{AtBeginDocument} hook.
% This allows the user to load the same packages with own options in the main file, after the |subversion| package is loaded, without any option clashes.
%
% While the \opt{sort} option is giving already good results, problems with the order of packages can still occur. Some packages provide, redefine or patch the same macros, so that they must be loaded in
% the correct order to give the desired result. Potential additional code in the sub-preambles, required for some sub-figures but maybe incompatible with others, complicates the situation further.
% If such issues occur they can hardly be handled in an automatic way. Instead the sub-preambles must be carefully merged into the main preamble.
% The option \opt*{print} was created to simplify this otherwise cumbersome task.
% It concatenated all sub-preambles into a single file named `\meta{main tex file name}|.stp|' (for \emph{st}andalone, \emph{p}rint). Each preamble is commented with its original file name.
% Please note that |.sta| file mentioned above, while quite similar, holds additional macros and might not be easily user readable or editable.
% After the file was generated it can be easily pasted into the main file preamble using a text editor.
%
% When the \opt{print} option is enabled the normal |.sta| file is not generated or loaded. Because this will cause most likely some errors related to packages not loaded, all sub-file bodies will be skipped.
% A warning is printed for each sub-file to remind the user about this fact. The \opt{print} option is only indented to by used when required to get a list of sub-preambles. After including this list in the main file the option
% must be removed to compile the main file normally.
%
% Finally if both the \opt*{print} and \opt*{sort} options are enabled, a `sorted' list of sub-preambles is printed into the |.stp| file. In this `sorted print' mode all |\usepackage| macros (and similar macros like
% |\usepgflibrary|, |\usetikzlibrary| as well as |\usetikztiminglibrary| from the |pgf|, |tikz| and |tikz-timing| packages, respectively) are removed from the rest of the sub-preamble code.
% A list of packages (and libraries) without duplicates is printed at the begin of the |.stp| file (using |\usepackage|, of course). Every option provided by any sub-file for a package is added, again without duplicates.
% If specific package date was requested in a sub-file it is also added. If multiple dates are requested for one package, the most recent (i.e.\ the ``highest one'', not the last processed) is used.
% After this list(s) the rest of the sub-preamble code is printed with the above macros removed. This mode frees the user from the need to remove duplicates and collect package options manually.
%
% Please note that all |\usepackage| and similar macros inside braces |{}| will not be seen by \cls{standalone}s sort macro and therefore are not extracted or handled in any special form mentioned above.
% This can be exploited to load certain packages only in \cls{standalone} mode but not in the main document.
% Unfortunately, macros inside |\ifstandalone|\ldots|\fi| are seen and extracted while not wanted inside the main file.
% The macro \cs{onlyifstandalone}\marg{code} (see below) was created because of this two reasons. Its argument braces hide the content from the scanner.
% It is then also completely removed from the printed sub-preamble code.
%
% The complementary options \opt*{comments}/\opt*{nocomments} select if the |.stp| file should also include the comments of the sub-preambles.
% Comments are included by default in the non-sorting print mode (\opt{print} without \opt{sort} option), but can cause `wrong' results during the `sorting' process and are therefore removed by default in this mode.
% The reason for this can be explained as follows.
% In order to transfer the comments from the sub-files to the |.stp| file \TeX\ must be instructed to handle them as normal input and not discard them.
% However, in this case the scanning algorithm which removes |\usepackage| and friends can not distinguish
% between `active' macros and macros which are commented out. All above mentioned macro inside comments will then be processed as when there where `active'.
% The user might favour the information provided by the comments over this small risk and enable them using the \opt{comments} option.
%
% \subsection{Macros and Environments}
% \subsection{Configuration}\label{sec:cfg}
% The \cls{standalone} class loads the configuration file \file{standalone.cfg} after the if-switches and options are defined, but before the options are proccessed.
% The default options which should be passed to \pkg{preview} or \cls{beamer} can be set here using:\\[\smallskipamount]
% \hspace*{2\parindent}\Macro\PassOptionsToPackage{<options>}{preview}\\
% \hspace*{2\parindent}\Macro\PassOptionsToClass{<options>}{beamer}\\[\medskipamount]
% The if-switches can be used, but \Macro{ifbeamerstandalone} will always be false because the \opt{beamer}
% option is not yet processed. Such code should be places inside \Macro\AtEndOfClass{\ldots}. 
% Please note that this was handled differently before v1.0, so in old configuration files edited by the user the \Macro\AtEndOfClass must now be added.
%
% \DescribeMacro\standaloneconfig{<key=value, key=value, \ldots>}
% This macro is defined by the class and also provided by the package and allows the configuration of both.
% All package and class options can be used here as well, but are only valid in the current group (i.e.\ global when used in the preamble or config file).
% However, the class options must be prefixed with `|cls/|'. The key=value engine of the \pkg{pgfkeys} package (\pkg{pgf} bundle) is used which is
% described in detail in the |pgfmanual|, part V, section 55 "Key Management".
%
% This macro also allows the definitions of custom class options, e.g.\ to support different image types for conversion.
% For example to define the short-key `|bmp|' to convert to the BMP format use:\\
% \hbox to \linewidth{\hss|\standaloneconfig{cls/bmp/.style={convert={outext={.bmp}}}}|\hss}
%
% ^^A\newpage
% \subsection{Usage Examples}
%
% \def\lstlistingname{Example}
%
% \par\noindent
% \begin{minipage}{\textwidth}\small
% \begin{lstlisting}[language={[latex]tex},gobble=4,frame=lines,caption={Use of \emph{standalone} package.}]
%   % Main file
%   % Real document class:
%   \documentclass{article}
%
%   % Use the 'standalone' package:
%   \usepackage{standalone}
%
%   % Load all packages needed for all sub-files:
%   \usepackage{tikz}
%
%   % Inside the real 'document' environment
%   % read the sub-file with '\input'
%   \begin{document}
%   % ...
%   \begin{figure}
%     \input{subfile}
%     \caption{A subfile}
%   \end{figure}
%   % ...
%   \end{document}
% \end{lstlisting}
% \end{minipage}
%
% \par\noindent
% \begin{minipage}{\textwidth}\small
% \begin{lstlisting}[language={[latex]tex},gobble=4,frame=lines,caption={Use of \emph{standalone} class.}]
%   % A sub-file (e.g. picture) using the 'standalone' class:
%   % Use 'standalone' as document class:
%   \documentclass{standalone}
%
%   % Load packages needed for this TeX file:
%   \usepackage{tikz}
%
%   % Surround TeX code with 'document' environment as usually:
%   \begin{document}
%   % Add your TeX code, e.g. a picture:
%   \begin{tikzpicture}
%     \draw (0,0) rectangle (2,1) node [midway] {Example};
%   \end{tikzpicture}
%   \end{document}
% \end{lstlisting}
% \end{minipage}
%
% \par\noindent
% \begin{minipage}{\textwidth}\small
% \begin{lstlisting}[language={[latex]tex},gobble=4,frame=lines,caption={Effective code if compiled standalone.}]
%   \documentclass{article}
%
%   \newenvironment{standalone}{\begin{preview}}{\end{preview}}
%   \input{standalone.cfg}
%   % which by defaults loads:
%   % \PassOptionsToPackage{active,tightpage}{preview}
%   \usepackage{preview}
%
%   \usepackage{tikz}
%
%   \begin{document}
%   \begin{standalone}
%   \begin{tikzpicture}
%     \draw (0,0) rectangle (2,1) node [midway] {Example};
%   \end{tikzpicture}
%   \end{standalone}
%   \end{document}
% \end{lstlisting}
% \end{minipage}
%
% \par\noindent
% \begin{minipage}{\textwidth}\small
% \begin{lstlisting}[language={[latex]tex},gobble=4,frame=lines,caption={Effective code if included in a main document.}]
%   \begingroup
%   \begin{tikzpicture}
%     \draw (0,0) rectangle (2,1) node [midway] {Example};
%   \end{tikzpicture}
%   \endgroup
%   \endinput
% \end{lstlisting}
% \end{minipage}
%
%
%
% \subsection{Simple TeX File}
% \noindent
% The simple |standalone.tex| file will set the \cs{ifstandalone} switch to true when compiled standalone but to false
% when loaded after any |\documentclass| macro, as long the switch isn't defined yet.
% It must be used if the switch is required is intended to be used before the |\documentclass| of a standalone file.
%
% \noindent
% \begin{minipage}{\textwidth}\noindent\small
% \begin{lstlisting}[language={[latex]tex},gobble=4,frame=lines,numbers=none,caption={Usage of 'standalone.tex'.}]
%   \input{standalone} % use before any '\documentclass'
%   \ifstandalone
%     % Used only if compiled standalone
%   \fi
% \end{lstlisting}
% \end{minipage}
%
% \subsection{Usage with \texttt{svn-multi} keywords}\label{sec:svnmulti}
% If the version control package \texttt{svn-multi} is used, the keyword macros (|\svnid| or |\svnidlong|)
% need to be placed after the |\begin{document}| to be taken into account by the main document.
% The \texttt{svn-multi} package must be loaded by the sub-file preamble to avoid compile errors in standalone mode.
% Alternative, if the keywords are not required in this mode, they can be surrounded by |\ifstandalone\else|\dots|\fi|.
%
% \subsection{Convert to Image}
% \textbf{This feature is new and not fully tested on every platform yet. Please do not hesitate to contact the author by e-mail about issues or suggestions.}
%
% \par\medskip\noindent
% The compiled output PDF (DVI/PS support pending) can be converted to an image (recommended is PNG, but JPG or other are also supported) with
% the help of an external application. The resulting image is useful for web-publishing or importing the standalone TeX picture into a
% software with can't handle PDF/(E)PS.
%
% \subsubsection{Conversion Options}
% The \opt*{convert} option controls the conversion feature of \cls{standalone}. It takes an optional value which can be used to specify
% sub-options. Without a value the conversion defaults (PNG, density 300dpi) are used. The conversion is disabled by default.
% Using the \opt{convert} option with any value other than |false| will enabled it.
% Table~\ref{tab:convopt} lists the normal conversion options for the conversation settings.
% Table~\ref{tab:advconvopt} lists the more advanced options which can be used to modify the conversation command or to add support for other
% output formats. The \opt{border} option might be used in addition to adjust the border which will affect the resulting image.
%
% For the common output formats PNG (recommended for rastered vector graphics), JPG and GIF the class options \opt*{png}, \opt*{jpg} and \opt*{gif}
% are also defined. They simply call \opt{convert} with the correct settings of \opt{outext} and pass an optional value to it. They can also be used
% inside the value of \opt{convert}. Further defined shortkeys are \opt{png72}, \opt{png150} and \opt{png300} which also set the density to the given number.
%
% \par\medskip
% \noindent\textbf{Examples:}\\[\smallskipamount]
% PDF/PS is rastered with 600x100dpi and then converted to JPG:\\*
% |  \documentclass[convert={density=600x100,jpg}]{standalone}|\\[\smallskipamount]
% Produces BMP with 400x400px\\*
% |  \documentclass[convert={outext=.bmp,size=400}]{standalone}|\\[\smallskipamount]
% Short-key to build a PNG:\\*
% |  \documentclass[png]{standalone}|\\[\smallskipamount]
% Short-key to build a PNG, with extra settings:\\*
% |  \documentclass[png={size=200x400,density=600}]{standalone}|\\[\smallskipamount]
%
%
% \subsubsection{DVI Support}
% The conversion option is mainly developed with PDF output in mind. To the knowledge of the author
% DVI output requires the conversion to PostScript (PS) before it can be converted to an image.
% This is done by and pre-command which is executed before the actual conversion command. It defaults to `|dvips \jobname|' or is empty if PDF output is detected.
%
% \subsubsection{Conversion Programs}\label{sec:convprogs}
% The actual conversion is done using an external program. This program is called by the \cls{standalone} class direct after the class options are processed.
% Then the output file (PDF or DVI) created by the last run is not yet opened and therefore still in its old condition, so that it can be converted.
% By default the execution of external program is restricted for \LaTeX\ to a very limited set of programs. This is for security reasons to prevent
% documents a user might have received from another person to cause harm. In order to run the image conversation program the `{\bfseries|-shell-escape|}'
% command line argument of the \LaTeX{} compiler must be used (for TeXLive; MikTeX uses officially `|--enable-write18|' but also understand the other one).
% Another possibility is to add the used conversation executable to list of allowed commands.
% For TeXLive this is done by adding it to the |shell_escape_commands| variable in the |texmf.cnf| file.
%
% By default the conversion program of Image Magick (\url{http://www.imagemagick.org/}) is used, which is freely available for Unix/Linux, Mac and MS Windows.
% Under Ubuntu Linux it can be installed using `|sudo apt-get install imagemagick|'.
% The conversion executable is simply called `|convert|'. However, there is another program with the same name provided by MS Windows itself which
% converts old FAT filesystems to NTFS! It has been suggested to rename the Image Magick executable to `|imgconvert|' instead.
% By default \cls{standalone} uses `|imgconvert|' as executable and only uses `|convert|' if it is found at `|/usr/bin/convert|' or `|/usr/local/bin/convert|'
% which indicates a Unix/Linux OS where the `|convert|' name is save to use.
% The executable name can be change manually using the `|convertexe|' conversion option or by using\\
% \centerline{\Macro\standaloneconfig{'cls/convert/convertexe='{convert}}}
% in the configuration file `|standalone.cfg|'.
%
% Another conversion program is Ghostscript (\url{http://pages.cs.wisc.edu/~ghost/}) which is a very common PostScript interpreter which also supports PDF.
% Under Ubuntu Linux it is most likely already installed but otherwise can be installed using `|sudo apt-get install ghostscript|' or
% `|sudo apt-get install gs|'.
% It can convert both to various output formats and is freely available for Unix/Linux, Max OS X and MS Windows.
% It requires to set the correct output device which is not always fully identical to the output format (e.g.\ `|png16m|' for a PNG (with 16 million colors)).
% The devices for PNG and JPG are already configured.
% Other devices can be directly set using the \opt{gsdevice} conversion option or by defining it using:
% ^^A\centerline
% {\footnotesize\Macro\standaloneconfig{'cls/convert/gsdevice/ext'<.extension>'/.initial='{<device>}}}
% in the configuration file `|standalone.cfg|'.
%
% \begin{table}
% \belowcaptionskip=\abovecaptionskip
% \caption[Conversion Options]{Conversion Options (to be used in the value of \opt{convert} class option)}\label{tab:convopt}
% \hbox to \textwidth{\hss%
% \begin{tabular}{>{\ttfamily}lp{\dimexpr.7\textwidth\relax}l}
%  \toprule
%  \multicolumn{1}{l}{Sub-Option}  &  Description & Default value \\
%  \midrule
%   (no value) &  Conversion enabled with default settings.  & ./. \\
%     true     &  Conversion enabled (with default settings if no other options are given). & (no value) \\
%     false    &  Conversion disabled.  & (no value) \\
%     newer    &  Convert only if the |.tex| file is newer than the output file. & (no value/default) \\
%     force    &  Force conversion (opposite of "newer")  & (no value) \\
%  \midrule
%     density  &  Sets the density in dots-per-inch (dpi). Can be a single numerical value or `\meta{X}|x|\meta{Y}'.  & |300| \\
%     size     &  Sets the size of the image. Can be a single numerical value or `\meta{X}|x|\meta{Y}'. If empty the size is determined by the density setting and the size of the PDF. & (empty) \\
%     inext    &  Input file extension including the leading dot. & |\ifpdf.pdf\else.ps\fi| \\
%     inname   &  Name base of input file (i.e.\ file name without extension). & |\jobname| \\
%     infile   &  Input file name. & |\inname\inext| \\
%     outext   &  Output file extension including the leading dot. & |.pdf| \\
%     outname  &  Name base of output file (i.e.\ file name without extension). & |\inname| \\
%     outfile  &  Output file name. & |\outname\outext| \\
%  \bottomrule\noalign{\smallskip}
%  \multicolumn{3}{l}{%
%   \strut Note: the settings (except 'true' and 'false') can also be used as macros in other settings.
%   }%
% \end{tabular}
% \hss}
% \end{table}
% \begin{table}
% \belowcaptionskip=\abovecaptionskip
% \caption{Advanced Conversion Options}\label{tab:advconvopt}
% \hbox to \textwidth{\hss%
% \begin{tabular}{>{\ttfamily}lp{\dimexpr.6\textwidth\relax}l}
%  \toprule
%  \multicolumn{1}{l}{Sub-Option}  &  Description & Default value \\
%  \midrule
%     command  &  Command line used for conversion. & (see |imagemagick|) \\
%     imagemagick & Sets the convert command to use Image Magick: \newline\bigskip
%                   \hspace*{1em}\hbox{\vtop{\hbox{\strut|command={\convertexe\space -density \density\space |\vrule height 2\ht\strutbox width 0pt{}\egroup
%                                      \hbox\bgroup\strut|         \infile\space \ifx\size\empty\else |\egroup
%                                      \hbox\bgroup\strut|         -resize \size\fi\space -quality 90 \outfile}|}}\hss} \\
%     convertexe  & Name of the executable of Image Magick. & (see section~\ref{sec:convprogs})  \\
%     ghostscript & Sets the convert command to use Ghostscript: \newline\bigskip
%                   \hspace*{1em}\hbox{\vtop{\hbox{\strut|command={gs -dSAFER -dBATCH -dNOPAUSE -sDEVICE=\gsdevice\space|\vrule height 2\ht\strutbox width 0pt{}\egroup
%                                      \hbox\bgroup\strut|         -r\density\space -sOutputFile=\outfile\space \infile}|}}\hss} \\
%     gs          & Alias for |ghostscript| \\
%     precommand  & Command to be executed before the actual conversion command.  & \hbox{\vtop{\hbox{\strut|\ifpdf\else|}\hbox{\strut{|  dvips \jobname \fi|}}}} \\
%     gsdevice    & The output device to be used for ghostscript. Already set up for PNG and JPG output. & \hbox{\vtop{\hbox{value of `|gsdevice/ext\outext|'\strut}{\hbox{\strut if defined, otherwise |\outext|}\hbox{\strut without the dot}}}} \\
%       onfailure & Sets if an type of `message' which should be triggered on conversion failure:  |error| (default), |warning|, |info| or |ignore|. & |error| \\
%  \bottomrule
% \end{tabular}
% \hss}
% \end{table}
%
% \StopEventually{}
% \clearpage
% \section{Implementation}
%
% \iffalse
%<@standalone.cls>
% \fi
%
% \iffalse
%<@standalone.sty>
% \fi
%
% \iffalse
%<@standalone.tex>
% \fi
%
% \iffalse
%<@standalone.cfg>
% \fi
%
% \Finale
% \endinput
